; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\systick.o --asm_dir=.\ --list_dir=.\ --depend=.\systick.d --cpu=Cortex-M0 --apcs=interwork -I..\incs\asm-arm\stm32f0xx -I..\incs\kernel -I..\incs\driver -I..\incs\driver\stm32f051x -I..\task\usertask -I..\incs\driver\stm32f103x -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F0xx -DSTM32F051 --omf_browse=.\systick.crf ..\arch\arm\stm32f05x\kernel\systick\systick.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  sys_tick_init PROC
;;;61      */			   
;;;62     void sys_tick_init(u8 sysclk)
000000  b510              PUSH     {r4,lr}
;;;63     {
;;;64         
;;;65         u32 reload;
;;;66         
;;;67         
;;;68         reload=SYSCLK;		//每秒钟的计数次数 单位为K	   
;;;69         reload*=1000000/OS_TICKS_PER_SEC;//根据OS_TICKS_PER_SEC设定溢出时间
000002  481b              LDR      r0,|L1.112|
;;;70         SysTick_Config(reload);	
000004  f7fffffe          BL       SysTick_Config
;;;71         
;;;72     }								    
000008  bd10              POP      {r4,pc}
;;;73     
                          ENDP

                  delay_us PROC
;;;84      */	    								   
;;;85     void delay_us(u32 nus)
00000a  b570              PUSH     {r4-r6,lr}
;;;86     {		
;;;87         u32 ticks;
;;;88         u32 told,tnow,tcnt=0;
;;;89         u32 reload=SysTick->LOAD;	//LOAD的值	    	 
00000c  4d19              LDR      r5,|L1.116|
00000e  2300              MOVS     r3,#0                 ;88
000010  696c              LDR      r4,[r5,#0x14]
;;;90         ticks=nus*fac_us; 			//需要的节拍数	  		 
000012  4919              LDR      r1,|L1.120|
;;;91         tcnt=0;
;;;92         //	OSSchedLock();				//阻止ucos调度，防止打断us延时
;;;93         told=SysTick->VAL;        	//刚进入时的计数器值
000014  69aa              LDR      r2,[r5,#0x18]
000016  7809              LDRB     r1,[r1,#0]            ;90  ; fac_us
000018  4348              MULS     r0,r1,r0              ;90
                  |L1.26|
;;;94         while(1)
;;;95         {
;;;96             tnow=SysTick->VAL;	
00001a  69a9              LDR      r1,[r5,#0x18]
;;;97             if(tnow!=told)
00001c  4291              CMP      r1,r2
00001e  d0fc              BEQ      |L1.26|
;;;98             {	    
;;;99                 if(tnow<told)tcnt+=told-tnow;//这里注意一下SYSTICK是一个递减的计数器就可以了.
000020  4291              CMP      r1,r2
000022  d201              BCS      |L1.40|
000024  1a52              SUBS     r2,r2,r1
000026  e001              B        |L1.44|
                  |L1.40|
;;;100                else tcnt+=reload-tnow+told;	    
000028  1a66              SUBS     r6,r4,r1
00002a  18b2              ADDS     r2,r6,r2
                  |L1.44|
00002c  18d3              ADDS     r3,r2,r3
;;;101                told=tnow;
00002e  460a              MOV      r2,r1
;;;102                if(tcnt>=ticks)break;//时间超过/等于要延迟的时间,则退出.
000030  4283              CMP      r3,r0
000032  d3f2              BCC      |L1.26|
;;;103            }  
;;;104        };
;;;105        //	OSSchedUnlock();			//开启ucos调度 									    
;;;106    }
000034  bd70              POP      {r4-r6,pc}
;;;107    
                          ENDP

                  delay_ms PROC
;;;109    //nms:要延时的ms数
;;;110    void delay_ms(u16 nms)
000036  217d              MOVS     r1,#0x7d
;;;111    {	
;;;112        
;;;113        delay_us((u32)(nms*1000));	//普通方式延时 
000038  00c9              LSLS     r1,r1,#3
00003a  4348              MULS     r0,r1,r0
00003c  e7fe              B        delay_us
;;;114    }
;;;115    
                          ENDP

                  SysTick_Handler PROC
;;;119    
;;;120    void SysTick_Handler()
00003e  b510              PUSH     {r4,lr}
;;;121    {
;;;122        systick_process();
000040  f7fffffe          BL       systick_process
;;;123    }
000044  bd10              POP      {r4,pc}
;;;124    
                          ENDP

                  SysTick_Config PROC
;;;655     */
;;;656    __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
000046  490d              LDR      r1,|L1.124|
;;;657    {
000048  b510              PUSH     {r4,lr}
;;;658      if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */
00004a  1e40              SUBS     r0,r0,#1
00004c  4288              CMP      r0,r1
00004e  d901              BLS      |L1.84|
000050  2001              MOVS     r0,#1
;;;659    
;;;660      SysTick->LOAD  = ticks - 1;                                  /* set reload register */
;;;661      NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrupt */
;;;662      SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
;;;663      SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
;;;664                       SysTick_CTRL_TICKINT_Msk   |
;;;665                       SysTick_CTRL_ENABLE_Msk;                    /* Enable SysTick IRQ and SysTick Timer */
;;;666      return (0);                                                  /* Function successful */
;;;667    }
000052  bd10              POP      {r4,pc}
                  |L1.84|
000054  4907              LDR      r1,|L1.116|
000056  6148              STR      r0,[r1,#0x14]         ;660
000058  4809              LDR      r0,|L1.128|
00005a  2207              MOVS     r2,#7                 ;660
00005c  69c3              LDR      r3,[r0,#0x1c]         ;660
00005e  021b              LSLS     r3,r3,#8              ;660
000060  0a1b              LSRS     r3,r3,#8              ;660
000062  044c              LSLS     r4,r1,#17             ;660
000064  4323              ORRS     r3,r3,r4              ;660
000066  61c3              STR      r3,[r0,#0x1c]         ;660
000068  2000              MOVS     r0,#0                 ;662
00006a  6188              STR      r0,[r1,#0x18]         ;662
00006c  610a              STR      r2,[r1,#0x10]         ;663
00006e  bd10              POP      {r4,pc}
;;;668    
                          ENDP

                  |L1.112|
                          DCD      0x0000bb80
                  |L1.116|
                          DCD      0xe000e000
                  |L1.120|
                          DCD      ||.data||
                  |L1.124|
                          DCD      0x00ffffff
                  |L1.128|
                          DCD      0xe000ed04

                          AREA ||.data||, DATA, ALIGN=0

                  fac_us
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\arch\\arm\\stm32f05x\\kernel\\systick\\systick.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_systick_c_7983e740____REV16|
#line 129 "d:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_systick_c_7983e740____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_systick_c_7983e740____REVSH|
#line 144
|__asm___9_systick_c_7983e740____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
