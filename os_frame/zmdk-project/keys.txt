; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\keys.o --asm_dir=.\ --list_dir=.\ --depend=.\keys.d --cpu=Cortex-M0 --apcs=interwork -I..\incs\asm-arm\stm32f0xx -I..\incs\kernel -I..\incs\driver -I..\incs\driver\stm32f051x -I..\task\usertask -I..\incs\driver\stm32f103x -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F0xx -DSTM32F051 --omf_browse=.\keys.crf ..\drivers\stm32f051x\misc\keys\keys.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  keys_init PROC
;;;107    
;;;108    static os_err_t  keys_init   (os_device_t* dev)
000000  2001              MOVS     r0,#1
;;;109    {  	 
;;;110        
;;;111        //	RCC->APB2ENR |=1<<2|1<<3;     //enbale PORTA  PAORB CLOCK  
;;;112        //	GPIOA->CRH   &=0XFFFFFFF0;//PA8
;;;113        //	GPIOA->CRH   |=0X00000008;   
;;;114        //	GPIOB->CRH   &=0X0FFFFFFF;//pb15	  
;;;115        //	GPIOB->CRH   |=0X80000000; 				   
;;;116        //	GPIOA->ODR   |=1<<8;	   //pull up
;;;117        //	GPIOB->ODR   |=1<<15;	   //PB15 pull up
;;;118        //  key_trigger_status.key1_trigger=FTIR;
;;;119        //  key_trigger_status.key2_trigger=FTIR;
;;;120        ////	Ex_NVIC_Config(GPIO_A,0, RTIR); //?????
;;;121        //	Ex_NVIC_Config(GPIO_A, 8 , key_trigger_status.key1_trigger);//?????
;;;122        //	Ex_NVIC_Config(GPIO_B, 15,key_trigger_status.key2_trigger);//?????
;;;123        
;;;124        //	MY_NVIC_Init(2,3,EXTI9_5_IRQn,2);//??2,????1,?2
;;;125        //	MY_NVIC_Init(2,3,EXTI15_10_IRQn,2);//??2,????1,?2
;;;126        //	
;;;127        //	//MY_NVIC_Init(0,3,USART1_IRQn,2);//组2，最低优先级 
;;;128        return SUCCESS;
;;;129        
;;;130        
;;;131    }
000002  4770              BX       lr
;;;132    
                          ENDP

                  keys_register PROC
;;;69      */
;;;70     os_err_t keys_register(u16 task_id)
000004  b510              PUSH     {r4,lr}
;;;71     {
000006  4604              MOV      r4,r0
;;;72         key_dev=osmalloc(sizeof(key_device));
000008  2040              MOVS     r0,#0x40
00000a  f7fffffe          BL       osmalloc
00000e  493a              LDR      r1,|L1.248|
;;;73         
;;;74         
;;;75         key_dev->os_device.type= OS_Device_Class_Misc;
;;;76         
;;;77         key_dev->os_device.device_id=OS_DEVICE_KEY_ID;
;;;78         
;;;79         key_dev->register_taskid=task_id;
;;;80         
;;;81         key_dev->os_device.init=keys_init;
;;;82         
;;;83         key_dev->os_device.open=NULL;
;;;84         
;;;85         key_dev->os_device.write=NULL;
;;;86         
;;;87         
;;;88         return os_device_register(&(key_dev->os_device), KEY_NAME, OS_DEVICE_FLAG_INACTIVATED);
000010  2202              MOVS     r2,#2
000012  6048              STR      r0,[r1,#4]            ;75  ; key_dev
000014  2111              MOVS     r1,#0x11              ;75
000016  7401              STRB     r1,[r0,#0x10]         ;75
000018  2102              MOVS     r1,#2                 ;77
00001a  7581              STRB     r1,[r0,#0x16]         ;77
00001c  8784              STRH     r4,[r0,#0x3c]         ;79
00001e  4937              LDR      r1,|L1.252|
000020  6201              STR      r1,[r0,#0x20]         ;83
000022  2100              MOVS     r1,#0                 ;83
000024  6241              STR      r1,[r0,#0x24]         ;85
000026  6301              STR      r1,[r0,#0x30]
000028  a135              ADR      r1,|L1.256|
00002a  f7fffffe          BL       os_device_register
;;;89         
;;;90     }
00002e  bd10              POP      {r4,pc}
;;;91     
                          ENDP

                  EXTI9_5_IRQHandler PROC
;;;135    static u16 count=0;
;;;136    void EXTI9_5_IRQHandler(void)
000030  b53e              PUSH     {r1-r5,lr}
;;;137    {
;;;138        
;;;139        key_data key_status={0};
000032  2000              MOVS     r0,#0
;;;140        key_status.key=key1;
000034  9002              STR      r0,[sp,#8]
000036  2101              MOVS     r1,#1
000038  4668              MOV      r0,sp
;;;141        if(key_trigger_status.key1_trigger==FTIR)
00003a  4c2f              LDR      r4,|L1.248|
00003c  7201              STRB     r1,[r0,#8]            ;140
00003e  7820              LDRB     r0,[r4,#0]  ; key_trigger_status
;;;142        {
;;;143            key_trigger_status.key1_trigger=RTIR;
;;;144            
;;;145            key_status.status=key_down;
;;;146        }else
;;;147        {
;;;148            key_trigger_status.key1_trigger=FTIR;
;;;149            key_status.status=key_released;
000040  2202              MOVS     r2,#2
000042  0783              LSLS     r3,r0,#30             ;141
000044  0880              LSRS     r0,r0,#2              ;143
000046  0f9b              LSRS     r3,r3,#30             ;141
000048  0080              LSLS     r0,r0,#2              ;143
00004a  2b01              CMP      r3,#1                 ;141
00004c  d01e              BEQ      |L1.140|
00004e  1c40              ADDS     r0,r0,#1              ;148
000050  7020              STRB     r0,[r4,#0]            ;148
000052  4668              MOV      r0,sp
000054  7242              STRB     r2,[r0,#9]
                  |L1.86|
;;;150        }
;;;151        keys_send_message(key_dev->register_taskid,&key_status,sizeof(key_data));
000056  a802              ADD      r0,sp,#8
000058  4d27              LDR      r5,|L1.248|
00005a  9201              STR      r2,[sp,#4]
00005c  9000              STR      r0,[sp,#0]
00005e  6868              LDR      r0,[r5,#4]  ; key_dev
000060  2302              MOVS     r3,#2
000062  8f80              LDRH     r0,[r0,#0x3c]
000064  2203              MOVS     r2,#3
000066  b2c0              UXTB     r0,r0
000068  2104              MOVS     r1,#4
00006a  f7fffffe          BL       send_message
;;;152        Ex_NVIC_Config(GPIO_A,8,key_trigger_status.key1_trigger);
00006e  7820              LDRB     r0,[r4,#0]  ; key_trigger_status
000070  2108              MOVS     r1,#8
000072  0782              LSLS     r2,r0,#30
000074  0f92              LSRS     r2,r2,#30
000076  2000              MOVS     r0,#0
000078  f7fffffe          BL       Ex_NVIC_Config
;;;153        count++;
00007c  8868              LDRH     r0,[r5,#2]  ; count
;;;154        EXTI->PR=1<<8;   
00007e  4922              LDR      r1,|L1.264|
000080  1c40              ADDS     r0,r0,#1              ;153
000082  8068              STRH     r0,[r5,#2]            ;153
000084  20ff              MOVS     r0,#0xff
000086  3001              ADDS     r0,#1
000088  6148              STR      r0,[r1,#0x14]
;;;155        
;;;156    }
00008a  bd3e              POP      {r1-r5,pc}
                  |L1.140|
00008c  1c80              ADDS     r0,r0,#2              ;143
00008e  7020              STRB     r0,[r4,#0]            ;143
000090  4668              MOV      r0,sp                 ;145
000092  7241              STRB     r1,[r0,#9]            ;145
000094  e7df              B        |L1.86|
;;;157    void EXTI15_10_IRQHandler(void)
                          ENDP

                  EXTI15_10_IRQHandler PROC
000096  b53e              PUSH     {r1-r5,lr}
;;;158    {	
;;;159        key_data key_status={0};
000098  2000              MOVS     r0,#0
;;;160        key_status.key=key2;
00009a  9002              STR      r0,[sp,#8]
00009c  2102              MOVS     r1,#2
00009e  4668              MOV      r0,sp
;;;161        if(key_trigger_status.key2_trigger==FTIR)
0000a0  4c15              LDR      r4,|L1.248|
0000a2  7201              STRB     r1,[r0,#8]            ;160
0000a4  7820              LDRB     r0,[r4,#0]  ; key_trigger_status
0000a6  0702              LSLS     r2,r0,#28
0000a8  0f93              LSRS     r3,r2,#30
;;;162        {
;;;163            key_trigger_status.key2_trigger=RTIR;
0000aa  22f3              MOVS     r2,#0xf3
0000ac  4010              ANDS     r0,r0,r2
0000ae  2b01              CMP      r3,#1                 ;161
0000b0  d01b              BEQ      |L1.234|
;;;164            key_status.status=key_down;
;;;165        }else
;;;166        {
;;;167            key_trigger_status.key2_trigger=FTIR;
0000b2  1d00              ADDS     r0,r0,#4
0000b4  7020              STRB     r0,[r4,#0]
;;;168            key_status.status=key_released;
0000b6  4668              MOV      r0,sp
0000b8  7241              STRB     r1,[r0,#9]
                  |L1.186|
;;;169            
;;;170        }
;;;171        keys_send_message(key_dev->register_taskid,&key_status,sizeof(key_data));
0000ba  a802              ADD      r0,sp,#8
0000bc  9000              STR      r0,[sp,#0]
0000be  480e              LDR      r0,|L1.248|
0000c0  9101              STR      r1,[sp,#4]
0000c2  6840              LDR      r0,[r0,#4]  ; key_dev
0000c4  2302              MOVS     r3,#2
0000c6  8f80              LDRH     r0,[r0,#0x3c]
0000c8  2203              MOVS     r2,#3
0000ca  b2c0              UXTB     r0,r0
0000cc  2104              MOVS     r1,#4
0000ce  f7fffffe          BL       send_message
;;;172        Ex_NVIC_Config(GPIO_B,15,key_trigger_status.key2_trigger);
0000d2  7820              LDRB     r0,[r4,#0]  ; key_trigger_status
0000d4  210f              MOVS     r1,#0xf
0000d6  0700              LSLS     r0,r0,#28
0000d8  0f82              LSRS     r2,r0,#30
0000da  2001              MOVS     r0,#1
0000dc  f7fffffe          BL       Ex_NVIC_Config
;;;173        
;;;174        
;;;175        EXTI->PR=1<<15;     //??LINE15???????  
0000e0  2001              MOVS     r0,#1
0000e2  4909              LDR      r1,|L1.264|
0000e4  03c0              LSLS     r0,r0,#15
0000e6  6148              STR      r0,[r1,#0x14]
;;;176    }
0000e8  bd3e              POP      {r1-r5,pc}
                  |L1.234|
0000ea  3008              ADDS     r0,r0,#8              ;163
0000ec  7020              STRB     r0,[r4,#0]            ;163
0000ee  2001              MOVS     r0,#1                 ;164
0000f0  466a              MOV      r2,sp                 ;164
0000f2  7250              STRB     r0,[r2,#9]            ;164
0000f4  e7e1              B        |L1.186|
;;;177    
                          ENDP

0000f6  0000              DCW      0x0000
                  |L1.248|
                          DCD      ||.data||
                  |L1.252|
                          DCD      keys_init
                  |L1.256|
000100  6b657973          DCB      "keys",0
000104  00      
000105  00                DCB      0
000106  00                DCB      0
000107  00                DCB      0
                  |L1.264|
                          DCD      0x40010400

                          AREA ||.data||, DATA, ALIGN=2

                  key_trigger_status
000000  0000              DCB      0x00,0x00
                  count
000002  0000              DCW      0x0000
                  key_dev
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\drivers\\stm32f051x\\misc\\keys\\keys.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_keys_c_599e7b50____REV16|
#line 129 "d:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_keys_c_599e7b50____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_keys_c_599e7b50____REVSH|
#line 144
|__asm___6_keys_c_599e7b50____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
