; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\calibration.o --asm_dir=.\ --list_dir=.\ --depend=.\calibration.d --cpu=Cortex-M0 --apcs=interwork -I..\incs\asm-arm\stm32f0xx -I..\incs\kernel -I..\incs\driver -I..\incs\driver\stm32f051x -I..\task\usertask -I..\incs\driver\stm32f103x -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F0xx -DSTM32F051 --omf_browse=.\calibration.crf ..\kernel\Q_Shell\calibration.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  calibration_rx_callback PROC
;;;88     
;;;89     os_err_t  calibration_rx_callback(u8 data)
000000  b5fe              PUSH     {r1-r7,lr}
;;;90     {
;;;91         
;;;92         
;;;93         
;;;94         /*start of a frame*/
;;;95         //  printf("%.2x",data);
;;;96         if(data == START_FLAG)
;;;97         {
;;;98             buffer_ptr =  buffer_cmd;
000002  4d18              LDR      r5,|L1.100|
;;;99             (*buffer_ptr) = START_FLAG;
;;;100            current_status = frame_started;
000004  2601              MOVS     r6,#1
000006  4c18              LDR      r4,|L1.104|
000008  28ff              CMP      r0,#0xff              ;96
00000a  d009              BEQ      |L1.32|
00000c  4621              MOV      r1,r4                 ;98
;;;101            buffer_ptr++;
00000e  684a              LDR      r2,[r1,#4]
;;;102            return SUCCESS;
;;;103        }
;;;104        
;;;105        
;;;106        if(current_status == frame_started)
000010  7823              LDRB     r3,[r4,#0]  ; current_status
;;;107        {
;;;108            if(data == PRE_ENED_FLAG)
;;;109            {
;;;110                current_status = frame_preended;
000012  2703              MOVS     r7,#3
000014  1c51              ADDS     r1,r2,#1              ;101
000016  2b01              CMP      r3,#1                 ;106
000018  d007              BEQ      |L1.42|
;;;111            }
;;;112            *buffer_ptr =  data;
;;;113            buffer_ptr++;
;;;114            
;;;115        }else if(current_status == frame_preended)
00001a  2b03              CMP      r3,#3
00001c  d009              BEQ      |L1.50|
00001e  e01e              B        |L1.94|
                  |L1.32|
000020  20ff              MOVS     r0,#0xff              ;99
000022  7028              STRB     r0,[r5,#0]            ;99
000024  1c6d              ADDS     r5,r5,#1              ;99
000026  7026              STRB     r6,[r4,#0]            ;100
000028  e018              B        |L1.92|
                  |L1.42|
00002a  2855              CMP      r0,#0x55              ;108
00002c  d106              BNE      |L1.60|
00002e  7027              STRB     r7,[r4,#0]            ;110
000030  e004              B        |L1.60|
                  |L1.50|
;;;116        {
;;;117            if(data == ENED_FLAG)
000032  28aa              CMP      r0,#0xaa
000034  d005              BEQ      |L1.66|
;;;118            {
;;;119                current_status = frame_ended;
;;;120                *buffer_ptr =  data;
;;;121                buffer_ptr++;
;;;122                
;;;123                /*send processing task the order obttained by uart1*/
;;;124                calibration_send_message( buffer_cmd ,sizeof(data_packge));
;;;125                
;;;126                // process_order(*((data_packge*)buffer_cmd));
;;;127                
;;;128                buffer_ptr =  buffer_cmd;
;;;129                
;;;130            }else if(data == PRE_ENED_FLAG)
000036  2855              CMP      r0,#0x55
000038  d000              BEQ      |L1.60|
;;;131            {
;;;132                current_status = frame_preended;
;;;133                *buffer_ptr =  data;
;;;134                buffer_ptr++;
;;;135            }else
;;;136            {
;;;137                current_status = frame_started; 
00003a  7026              STRB     r6,[r4,#0]
                  |L1.60|
00003c  7010              STRB     r0,[r2,#0]            ;133
00003e  6061              STR      r1,[r4,#4]            ;134  ; buffer_ptr
000040  e00d              B        |L1.94|
                  |L1.66|
000042  2304              MOVS     r3,#4                 ;119
000044  7023              STRB     r3,[r4,#0]            ;119
000046  7010              STRB     r0,[r2,#0]            ;120
000048  6061              STR      r1,[r4,#4]            ;124  ; buffer_ptr
00004a  2012              MOVS     r0,#0x12              ;124
00004c  9001              STR      r0,[sp,#4]            ;124
00004e  2303              MOVS     r3,#3                 ;124
000050  2201              MOVS     r2,#1                 ;124
000052  2104              MOVS     r1,#4                 ;124
000054  9500              STR      r5,[sp,#0]            ;124
000056  2000              MOVS     r0,#0                 ;124
000058  f7fffffe          BL       send_message
                  |L1.92|
00005c  6065              STR      r5,[r4,#4]            ;101  ; buffer_ptr
                  |L1.94|
;;;138                *buffer_ptr =  data;
;;;139                buffer_ptr++;
;;;140            }
;;;141            
;;;142            
;;;143        }
;;;144        return SUCCESS;
00005e  2001              MOVS     r0,#1
;;;145    }
000060  bdfe              POP      {r1-r7,pc}
;;;146    
                          ENDP

000062  0000              DCW      0x0000
                  |L1.100|
                          DCD      ||.bss||
                  |L1.104|
                          DCD      ||.data||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  buffer_cmd
                          %        22

                          AREA ||.data||, DATA, ALIGN=2

                  current_status
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  buffer_ptr
                          DCD      buffer_cmd

;*** Start embedded assembler ***

#line 1 "..\\kernel\\Q_Shell\\calibration.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___13_calibration_c_ea161d22____REV16|
#line 129 "d:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_calibration_c_ea161d22____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___13_calibration_c_ea161d22____REVSH|
#line 144
|__asm___13_calibration_c_ea161d22____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
