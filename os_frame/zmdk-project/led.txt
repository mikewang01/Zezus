; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\led.o --asm_dir=.\ --list_dir=.\ --depend=.\led.d --cpu=Cortex-M0 --apcs=interwork -I..\incs\asm-arm\stm32f0xx -I..\incs\kernel -I..\incs\driver -I..\incs\driver\stm32f051x -I..\task\usertask -I..\incs\driver\stm32f103x -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F0xx -DSTM32F051 --omf_browse=.\led.crf ..\drivers\stm32f051x\misc\LED\led.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  led_init PROC
;;;62     
;;;63     void led_init(void)
000000  b510              PUSH     {r4,lr}
;;;64     {
;;;65         
;;;66         os_clock_open("GPIOA"); 
000002  a035              ADR      r0,|L1.216|
000004  f7fffffe          BL       os_clock_open
;;;67         os_clock_open("GPIOB"); 
000008  a035              ADR      r0,|L1.224|
00000a  f7fffffe          BL       os_clock_open
;;;68         /* Speed mode configuration */
;;;69         LED1_PORT->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (LED1_PIN * 2));
00000e  2009              MOVS     r0,#9
000010  06c0              LSLS     r0,r0,#27
000012  6882              LDR      r2,[r0,#8]
000014  2103              MOVS     r1,#3
000016  0589              LSLS     r1,r1,#22
000018  438a              BICS     r2,r2,r1
00001a  6082              STR      r2,[r0,#8]
;;;70         LED1_PORT->OSPEEDR |= ((u32)(GPIO_Speed_2MHz) <<(LED1_PIN * 2));
00001c  6882              LDR      r2,[r0,#8]
00001e  2301              MOVS     r3,#1
000020  05db              LSLS     r3,r3,#23
000022  431a              ORRS     r2,r2,r3
000024  6082              STR      r2,[r0,#8]
;;;71         
;;;72         /* Output mode configuration */
;;;73         LED1_PORT->OTYPER &= ~((GPIO_OTYPER_OT_0) << ((u16) LED1_PIN));
000026  8882              LDRH     r2,[r0,#4]
000028  131b              ASRS     r3,r3,#12
00002a  439a              BICS     r2,r2,r3
00002c  8082              STRH     r2,[r0,#4]
;;;74         
;;;75         LED1_PORT->OTYPER |= (u16)(GPIO_OType_PP) << ((u16) LED1_PIN);
00002e  8882              LDRH     r2,[r0,#4]
000030  8082              STRH     r2,[r0,#4]
;;;76         
;;;77         LED1_PORT->MODER  &= ~(GPIO_MODER_MODER0 << ((u16) LED1_PIN * 2));
000032  6802              LDR      r2,[r0,#0]
000034  438a              BICS     r2,r2,r1
000036  6002              STR      r2,[r0,#0]
;;;78         
;;;79         LED1_PORT->MODER |= ((u32)GPIO_Mode_OUT) << ((u16) LED1_PIN * 2);
000038  6802              LDR      r2,[r0,#0]
00003a  02db              LSLS     r3,r3,#11
00003c  431a              ORRS     r2,r2,r3
00003e  6002              STR      r2,[r0,#0]
;;;80         
;;;81         /* Pull-up Pull down resistor configuration */
;;;82         LED1_PORT->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << ((u16)(LED1_PIN * 2)));
000040  68c2              LDR      r2,[r0,#0xc]
000042  438a              BICS     r2,r2,r1
000044  60c2              STR      r2,[r0,#0xc]
;;;83         
;;;84         LED1_PORT->PUPDR |= GPIO_PUPDR_PUPDR0 << ((u16) LED1_PIN * 2);
000046  68c2              LDR      r2,[r0,#0xc]
000048  430a              ORRS     r2,r2,r1
00004a  60c2              STR      r2,[r0,#0xc]
;;;85         
;;;86         
;;;87         /* Speed mode configuration */
;;;88         POWR_PORT->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (POWR_PIN * 2));
00004c  4826              LDR      r0,|L1.232|
00004e  6882              LDR      r2,[r0,#8]
000050  21c0              MOVS     r1,#0xc0
000052  438a              BICS     r2,r2,r1
000054  6082              STR      r2,[r0,#8]
;;;89         POWR_PORT->OSPEEDR |= ((u32)(GPIO_Speed_2MHz) <<(POWR_PIN * 2));
000056  6882              LDR      r2,[r0,#8]
000058  2380              MOVS     r3,#0x80
00005a  431a              ORRS     r2,r2,r3
00005c  6082              STR      r2,[r0,#8]
;;;90         
;;;91         /* Output mode configuration */
;;;92         POWR_PORT->OTYPER &= ~((GPIO_OTYPER_OT_0) << ((u16) POWR_PIN));
00005e  8883              LDRH     r3,[r0,#4]
000060  2208              MOVS     r2,#8
000062  4393              BICS     r3,r3,r2
000064  8083              STRH     r3,[r0,#4]
;;;93         
;;;94         POWR_PORT->OTYPER |= (u16)(GPIO_OType_PP) << ((u16) POWR_PIN);
000066  8883              LDRH     r3,[r0,#4]
000068  8083              STRH     r3,[r0,#4]
;;;95         
;;;96         POWR_PORT->MODER  &= ~(GPIO_MODER_MODER0 << ((u16) POWR_PIN * 2));
00006a  6803              LDR      r3,[r0,#0]
00006c  438b              BICS     r3,r3,r1
00006e  6003              STR      r3,[r0,#0]
;;;97         
;;;98         POWR_PORT->MODER |= ((u32)GPIO_Mode_OUT) << ((u16) POWR_PIN * 2);
000070  6803              LDR      r3,[r0,#0]
000072  2440              MOVS     r4,#0x40
000074  4323              ORRS     r3,r3,r4
000076  6003              STR      r3,[r0,#0]
;;;99         
;;;100        /* Pull-up Pull down resistor configuration */
;;;101        POWR_PORT->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << ((u16)(POWR_PIN * 2)));
000078  68c3              LDR      r3,[r0,#0xc]
00007a  438b              BICS     r3,r3,r1
00007c  60c3              STR      r3,[r0,#0xc]
;;;102        
;;;103        POWR_PORT->PUPDR |= GPIO_PUPDR_PUPDR0 << ((u16) POWR_PIN * 2);
00007e  68c3              LDR      r3,[r0,#0xc]
000080  430b              ORRS     r3,r3,r1
000082  60c3              STR      r3,[r0,#0xc]
;;;104        
;;;105        POWR_PORT->BSRR = 1<<POWR_PIN;
000084  6182              STR      r2,[r0,#0x18]
;;;106        
;;;107        
;;;108        
;;;109    }
000086  bd10              POP      {r4,pc}
;;;110    
                          ENDP

                  leds_control PROC
;;;124    
;;;125    os_err_t  leds_control(os_device_t* dev, u8 cmd, void *args)
000088  b510              PUSH     {r4,lr}
;;;126    {
;;;127        u8 led_num=((u8*)args)[1];
00008a  7852              LDRB     r2,[r2,#1]
;;;128        
;;;129        if(led_num < led_1&&led_num > led_2)
;;;130        {
;;;131            return ERROR;
;;;132        }
;;;133        
;;;134        if(dev==NULL)
00008c  2800              CMP      r0,#0
00008e  d022              BEQ      |L1.214|
000090  2301              MOVS     r3,#1                 ;126
;;;135        {
;;;136            return ERROR;
;;;137        }
;;;138        
;;;139        switch(cmd)
;;;140        {
;;;141        case led_on:  	led_ports[led_num]->BRR  = BIT_SHIFT(led_pins[led_num]) ;	 break;
000092  4c16              LDR      r4,|L1.236|
000094  4816              LDR      r0,|L1.240|
000096  2900              CMP      r1,#0                 ;139
000098  d004              BEQ      |L1.164|
00009a  2901              CMP      r1,#1                 ;139
00009c  d008              BEQ      |L1.176|
00009e  2902              CMP      r1,#2                 ;139
0000a0  d118              BNE      |L1.212|
0000a2  e00b              B        |L1.188|
                  |L1.164|
0000a4  5ca1              LDRB     r1,[r4,r2]
0000a6  408b              LSLS     r3,r3,r1
0000a8  0091              LSLS     r1,r2,#2
0000aa  5840              LDR      r0,[r0,r1]
0000ac  8503              STRH     r3,[r0,#0x28]
0000ae  e011              B        |L1.212|
                  |L1.176|
;;;142        case led_off: 	led_ports[led_num]->BSRR = BIT_SHIFT(led_pins[led_num]) ;   break;
0000b0  5ca1              LDRB     r1,[r4,r2]
0000b2  408b              LSLS     r3,r3,r1
0000b4  0091              LSLS     r1,r2,#2
0000b6  5840              LDR      r0,[r0,r1]
0000b8  6183              STR      r3,[r0,#0x18]
0000ba  e00b              B        |L1.212|
                  |L1.188|
;;;143            
;;;144        case led_trigger: if((led_ports[led_num]->ODR)&BIT_SHIFT(led_pins[led_num]))
0000bc  0091              LSLS     r1,r2,#2
0000be  5840              LDR      r0,[r0,r1]
0000c0  8a81              LDRH     r1,[r0,#0x14]
0000c2  5ca2              LDRB     r2,[r4,r2]
0000c4  4093              LSLS     r3,r3,r2
0000c6  4219              TST      r1,r3
;;;145            {
;;;146                led_ports[led_num]->ODR&=~BIT_SHIFT(led_pins[led_num]);
;;;147                
;;;148            }else
;;;149            {
;;;150                led_ports[led_num]->ODR|=BIT_SHIFT(led_pins[led_num]);
0000c8  8a81              LDRH     r1,[r0,#0x14]
0000ca  d001              BEQ      |L1.208|
0000cc  4399              BICS     r1,r1,r3              ;146
0000ce  e000              B        |L1.210|
                  |L1.208|
0000d0  4319              ORRS     r1,r1,r3
                  |L1.210|
0000d2  8281              STRH     r1,[r0,#0x14]         ;146
                  |L1.212|
;;;151            }
;;;152            break;
;;;153        default:break;
;;;154            
;;;155        }
;;;156        return SUCCESS;
0000d4  2001              MOVS     r0,#1
                  |L1.214|
;;;157    }
0000d6  bd10              POP      {r4,pc}
;;;158    
                          ENDP

                  |L1.216|
0000d8  4750494f          DCB      "GPIOA",0
0000dc  4100    
0000de  00                DCB      0
0000df  00                DCB      0
                  |L1.224|
0000e0  4750494f          DCB      "GPIOB",0
0000e4  4200    
0000e6  00                DCB      0
0000e7  00                DCB      0
                  |L1.232|
                          DCD      0x48000400
                  |L1.236|
                          DCD      ||.constdata||
                  |L1.240|
                          DCD      ||.data||

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  led_pins
000000  0b0c              DCB      0x0b,0x0c

                          AREA ||.data||, DATA, ALIGN=2

                  led_ports
                          DCD      0x48000000
                          DCD      0x48000000

;*** Start embedded assembler ***

#line 1 "..\\drivers\\stm32f051x\\misc\\LED\\led.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_led_c_led_init____REV16|
#line 129 "d:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_led_c_led_init____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_led_c_led_init____REVSH|
#line 144
|__asm___5_led_c_led_init____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
