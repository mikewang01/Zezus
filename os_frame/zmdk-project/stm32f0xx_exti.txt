; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\stm32f0xx_exti.o --asm_dir=.\ --list_dir=.\ --depend=.\stm32f0xx_exti.d --cpu=Cortex-M0 --apcs=interwork -I..\incs\asm-arm\stm32f0xx -I..\incs\kernel -I..\incs\driver -I..\incs\driver\stm32f051x -I..\task\usertask -I..\incs\driver\stm32f103x -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F0xx -DSTM32F051 --omf_browse=.\stm32f0xx_exti.crf ..\arch\arm\stm32f05x\lib\src\stm32f0xx_exti.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;107      */
;;;108    void EXTI_DeInit(void)
000000  4832              LDR      r0,|L1.204|
;;;109    {
;;;110      EXTI->IMR = 0x0F940000;
000002  4931              LDR      r1,|L1.200|
000004  6001              STR      r1,[r0,#0]
;;;111      EXTI->EMR = 0x00000000;
000006  2100              MOVS     r1,#0
000008  6041              STR      r1,[r0,#4]
;;;112      EXTI->RTSR = 0x00000000;
00000a  6081              STR      r1,[r0,#8]
;;;113      EXTI->FTSR = 0x00000000;
00000c  60c1              STR      r1,[r0,#0xc]
;;;114      EXTI->PR = 0x006BFFFF;
00000e  4930              LDR      r1,|L1.208|
000010  6141              STR      r1,[r0,#0x14]
;;;115    }
000012  4770              BX       lr
;;;116    
                          ENDP

                  EXTI_Init PROC
;;;128      */
;;;129    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
000014  b510              PUSH     {r4,lr}
;;;130    {
;;;131      uint32_t tmp = 0;
;;;132    
;;;133      /* Check the parameters */
;;;134      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;135      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;136      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));
;;;137      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;138    
;;;139      tmp = (uint32_t)EXTI_BASE;
;;;140    
;;;141      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000016  7983              LDRB     r3,[r0,#6]
000018  492c              LDR      r1,|L1.204|
00001a  6802              LDR      r2,[r0,#0]
00001c  2b00              CMP      r3,#0
00001e  d026              BEQ      |L1.110|
;;;142      {
;;;143        /* Clear EXTI line configuration */
;;;144        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
000020  680b              LDR      r3,[r1,#0]
000022  4393              BICS     r3,r3,r2
000024  600b              STR      r3,[r1,#0]
;;;145        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
000026  684a              LDR      r2,[r1,#4]
000028  6803              LDR      r3,[r0,#0]
00002a  439a              BICS     r2,r2,r3
00002c  604a              STR      r2,[r1,#4]
;;;146    
;;;147        tmp += EXTI_InitStruct->EXTI_Mode;
00002e  7902              LDRB     r2,[r0,#4]
000030  1852              ADDS     r2,r2,r1
;;;148    
;;;149        *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000032  6813              LDR      r3,[r2,#0]
000034  6804              LDR      r4,[r0,#0]
000036  4323              ORRS     r3,r3,r4
000038  6013              STR      r3,[r2,#0]
;;;150    
;;;151        /* Clear Rising Falling edge configuration */
;;;152        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
00003a  688a              LDR      r2,[r1,#8]
00003c  6803              LDR      r3,[r0,#0]
00003e  439a              BICS     r2,r2,r3
000040  608a              STR      r2,[r1,#8]
;;;153        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
000042  68ca              LDR      r2,[r1,#0xc]
000044  6803              LDR      r3,[r0,#0]
000046  439a              BICS     r2,r2,r3
000048  60ca              STR      r2,[r1,#0xc]
;;;154    
;;;155        /* Select the trigger for the selected interrupts */
;;;156        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
00004a  7942              LDRB     r2,[r0,#5]
00004c  2a10              CMP      r2,#0x10
00004e  d005              BEQ      |L1.92|
;;;157        {
;;;158          /* Rising Falling edge */
;;;159          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
;;;160          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
;;;161        }
;;;162        else
;;;163        {
;;;164          tmp = (uint32_t)EXTI_BASE;
;;;165          tmp += EXTI_InitStruct->EXTI_Trigger;
000050  1851              ADDS     r1,r2,r1
;;;166    
;;;167          *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000052  680a              LDR      r2,[r1,#0]
000054  6800              LDR      r0,[r0,#0]
000056  4302              ORRS     r2,r2,r0
000058  600a              STR      r2,[r1,#0]
;;;168        }
;;;169      }
;;;170      else
;;;171      {
;;;172        tmp += EXTI_InitStruct->EXTI_Mode;
;;;173    
;;;174        /* Disable the selected external lines */
;;;175        *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
;;;176      }
;;;177    }
00005a  bd10              POP      {r4,pc}
                  |L1.92|
00005c  688a              LDR      r2,[r1,#8]            ;159
00005e  6803              LDR      r3,[r0,#0]            ;159
000060  431a              ORRS     r2,r2,r3              ;159
000062  608a              STR      r2,[r1,#8]            ;159
000064  68ca              LDR      r2,[r1,#0xc]          ;160
000066  6800              LDR      r0,[r0,#0]            ;160
000068  4302              ORRS     r2,r2,r0              ;160
00006a  60ca              STR      r2,[r1,#0xc]          ;160
00006c  bd10              POP      {r4,pc}
                  |L1.110|
00006e  7900              LDRB     r0,[r0,#4]            ;172
000070  1840              ADDS     r0,r0,r1              ;172
000072  6801              LDR      r1,[r0,#0]            ;175
000074  4391              BICS     r1,r1,r2              ;175
000076  6001              STR      r1,[r0,#0]            ;175
000078  bd10              POP      {r4,pc}
;;;178    
                          ENDP

                  EXTI_StructInit PROC
;;;184      */
;;;185    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
00007a  2100              MOVS     r1,#0
;;;186    {
;;;187      EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
;;;188      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
00007c  6001              STR      r1,[r0,#0]
00007e  7101              STRB     r1,[r0,#4]
;;;189      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
000080  220c              MOVS     r2,#0xc
000082  7142              STRB     r2,[r0,#5]
;;;190      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
000084  7181              STRB     r1,[r0,#6]
;;;191    }
000086  4770              BX       lr
;;;192    
                          ENDP

                  EXTI_GenerateSWInterrupt PROC
;;;199      */
;;;200    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
000088  4910              LDR      r1,|L1.204|
;;;201    {
;;;202      /* Check the parameters */
;;;203      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;204    
;;;205      EXTI->SWIER |= EXTI_Line;
00008a  690a              LDR      r2,[r1,#0x10]
00008c  4302              ORRS     r2,r2,r0
00008e  610a              STR      r2,[r1,#0x10]
;;;206    }
000090  4770              BX       lr
;;;207    
                          ENDP

                  EXTI_GetFlagStatus PROC
;;;230      */
;;;231    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
000092  4a0e              LDR      r2,|L1.204|
;;;232    {
000094  4601              MOV      r1,r0
;;;233       FlagStatus bitstatus = RESET;
;;;234      /* Check the parameters */
;;;235      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;236    
;;;237      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000096  6952              LDR      r2,[r2,#0x14]
000098  2000              MOVS     r0,#0                 ;233
00009a  420a              TST      r2,r1
00009c  d000              BEQ      |L1.160|
;;;238      {
;;;239        bitstatus = SET;
00009e  2001              MOVS     r0,#1
                  |L1.160|
;;;240      }
;;;241      else
;;;242      {
;;;243        bitstatus = RESET;
;;;244      }
;;;245      return bitstatus;
;;;246    }
0000a0  4770              BX       lr
;;;247    
                          ENDP

                  EXTI_ClearFlag PROC
;;;253      */
;;;254    void EXTI_ClearFlag(uint32_t EXTI_Line)
0000a2  490a              LDR      r1,|L1.204|
;;;255    {
;;;256      /* Check the parameters */
;;;257      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;258    
;;;259      EXTI->PR = EXTI_Line;
0000a4  6148              STR      r0,[r1,#0x14]
;;;260    }
0000a6  4770              BX       lr
;;;261    
                          ENDP

                  EXTI_GetITStatus PROC
;;;268      */
;;;269    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
0000a8  4b08              LDR      r3,|L1.204|
;;;270    {
0000aa  4602              MOV      r2,r0
;;;271      ITStatus bitstatus = RESET;
;;;272      uint32_t enablestatus = 0;
;;;273      /* Check the parameters */
;;;274      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;275    
;;;276      enablestatus =  EXTI->IMR & EXTI_Line;
0000ac  6819              LDR      r1,[r3,#0]
0000ae  2000              MOVS     r0,#0                 ;271
;;;277      if (((EXTI->PR & EXTI_Line) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
0000b0  695b              LDR      r3,[r3,#0x14]
0000b2  4011              ANDS     r1,r1,r2              ;276
0000b4  4213              TST      r3,r2
0000b6  d002              BEQ      |L1.190|
0000b8  2900              CMP      r1,#0
0000ba  d000              BEQ      |L1.190|
;;;278      {
;;;279        bitstatus = SET;
0000bc  2001              MOVS     r0,#1
                  |L1.190|
;;;280      }
;;;281      else
;;;282      {
;;;283        bitstatus = RESET;
;;;284      }
;;;285      return bitstatus;
;;;286      
;;;287    }
0000be  4770              BX       lr
;;;288    
                          ENDP

                  EXTI_ClearITPendingBit PROC
;;;294      */
;;;295    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
0000c0  4902              LDR      r1,|L1.204|
;;;296    {
;;;297      /* Check the parameters */
;;;298      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;299    
;;;300      EXTI->PR = EXTI_Line;
0000c2  6148              STR      r0,[r1,#0x14]
;;;301    }
0000c4  4770              BX       lr
;;;302    
                          ENDP

0000c6  0000              DCW      0x0000
                  |L1.200|
                          DCD      0x0f940000
                  |L1.204|
                          DCD      0x40010400
                  |L1.208|
                          DCD      0x006bffff

;*** Start embedded assembler ***

#line 1 "..\\arch\\arm\\stm32f05x\\lib\\src\\stm32f0xx_exti.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___16_stm32f0xx_exti_c_28b3b60e____REV16|
#line 129 "d:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_stm32f0xx_exti_c_28b3b60e____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___16_stm32f0xx_exti_c_28b3b60e____REVSH|
#line 144
|__asm___16_stm32f0xx_exti_c_28b3b60e____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
