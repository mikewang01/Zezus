; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\stm32f0xx_dbgmcu.o --asm_dir=.\ --list_dir=.\ --depend=.\stm32f0xx_dbgmcu.d --cpu=Cortex-M0 --apcs=interwork -I..\incs\asm-arm\stm32f0xx -I..\incs\kernel -I..\incs\driver -I..\incs\driver\stm32f051x -I..\task\usertask -I..\incs\driver\stm32f103x -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F0xx -DSTM32F051 --omf_browse=.\stm32f0xx_dbgmcu.crf ..\arch\arm\stm32f05x\lib\src\stm32f0xx_dbgmcu.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  DBGMCU_GetREVID PROC
;;;76       */
;;;77     uint32_t DBGMCU_GetREVID(void)
000000  4811              LDR      r0,|L1.72|
;;;78     {
;;;79        return(DBGMCU->IDCODE >> 16);
000002  6800              LDR      r0,[r0,#0]
000004  0c00              LSRS     r0,r0,#16
;;;80     }
000006  4770              BX       lr
;;;81     
                          ENDP

                  DBGMCU_GetDEVID PROC
;;;86       */
;;;87     uint32_t DBGMCU_GetDEVID(void)
000008  480f              LDR      r0,|L1.72|
;;;88     {
;;;89        return(DBGMCU->IDCODE & IDCODE_DEVID_MASK);
00000a  6800              LDR      r0,[r0,#0]
00000c  0500              LSLS     r0,r0,#20
00000e  0d00              LSRS     r0,r0,#20
;;;90     }
000010  4770              BX       lr
;;;91     
                          ENDP

                  DBGMCU_Config PROC
;;;117      */
;;;118    void DBGMCU_Config(uint32_t DBGMCU_Periph, FunctionalState NewState)
000012  4a0d              LDR      r2,|L1.72|
;;;119    {
;;;120      /* Check the parameters */
;;;121      assert_param(IS_DBGMCU_PERIPH(DBGMCU_Periph));
;;;122      assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;123    
;;;124      if (NewState != DISABLE)
000014  2900              CMP      r1,#0
;;;125      {
;;;126        DBGMCU->CR |= DBGMCU_Periph;
;;;127      }
;;;128      else
;;;129      {
;;;130        DBGMCU->CR &= ~DBGMCU_Periph;
000016  6851              LDR      r1,[r2,#4]
000018  d001              BEQ      |L1.30|
00001a  4301              ORRS     r1,r1,r0              ;126
00001c  e000              B        |L1.32|
                  |L1.30|
00001e  4381              BICS     r1,r1,r0
                  |L1.32|
000020  6051              STR      r1,[r2,#4]            ;126
;;;131      }
;;;132    }
000022  4770              BX       lr
;;;133    
                          ENDP

                  DBGMCU_APB1PeriphConfig PROC
;;;152      */
;;;153    void DBGMCU_APB1PeriphConfig(uint32_t DBGMCU_Periph, FunctionalState NewState)
000024  4a08              LDR      r2,|L1.72|
;;;154    {
;;;155      /* Check the parameters */
;;;156      assert_param(IS_DBGMCU_APB1PERIPH(DBGMCU_Periph));
;;;157      assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;158    
;;;159      if (NewState != DISABLE)
000026  2900              CMP      r1,#0
;;;160      {
;;;161        DBGMCU->APB1FZ |= DBGMCU_Periph;
;;;162      }
;;;163      else
;;;164      {
;;;165        DBGMCU->APB1FZ &= ~DBGMCU_Periph;
000028  6891              LDR      r1,[r2,#8]
00002a  d001              BEQ      |L1.48|
00002c  4301              ORRS     r1,r1,r0              ;161
00002e  e000              B        |L1.50|
                  |L1.48|
000030  4381              BICS     r1,r1,r0
                  |L1.50|
000032  6091              STR      r1,[r2,#8]            ;161
;;;166      }
;;;167    }
000034  4770              BX       lr
;;;168    
                          ENDP

                  DBGMCU_APB2PeriphConfig PROC
;;;180      */
;;;181    void DBGMCU_APB2PeriphConfig(uint32_t DBGMCU_Periph, FunctionalState NewState)
000036  4a04              LDR      r2,|L1.72|
;;;182    {
;;;183      /* Check the parameters */
;;;184      assert_param(IS_DBGMCU_APB2PERIPH(DBGMCU_Periph));
;;;185      assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;186    
;;;187      if (NewState != DISABLE)
000038  2900              CMP      r1,#0
;;;188      {
;;;189        DBGMCU->APB2FZ |= DBGMCU_Periph;
;;;190      }
;;;191      else
;;;192      {
;;;193        DBGMCU->APB2FZ &= ~DBGMCU_Periph;
00003a  68d1              LDR      r1,[r2,#0xc]
00003c  d001              BEQ      |L1.66|
00003e  4301              ORRS     r1,r1,r0              ;189
000040  e000              B        |L1.68|
                  |L1.66|
000042  4381              BICS     r1,r1,r0
                  |L1.68|
000044  60d1              STR      r1,[r2,#0xc]          ;189
;;;194      }
;;;195    }
000046  4770              BX       lr
;;;196    
                          ENDP

                  |L1.72|
                          DCD      0x40015800

;*** Start embedded assembler ***

#line 1 "..\\arch\\arm\\stm32f05x\\lib\\src\\stm32f0xx_dbgmcu.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___18_stm32f0xx_dbgmcu_c_588a430f____REV16|
#line 129 "d:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___18_stm32f0xx_dbgmcu_c_588a430f____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___18_stm32f0xx_dbgmcu_c_588a430f____REVSH|
#line 144
|__asm___18_stm32f0xx_dbgmcu_c_588a430f____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
